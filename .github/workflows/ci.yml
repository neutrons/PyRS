name: PyRS CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - next
    tags:
      - v*

env:
  TRIGGER_URL: "https://code.ornl.gov/api/v4/projects/6012/trigger/pipeline"

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 100

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: mantid,mantid/label/nightly,conda-forge
          environment-file: environment.yml

      - name: Apt install deps
        run: |
          sudo apt update
          sudo apt-get install xvfb freeglut3-dev libglu1-mesa

      - name: Lint
        run: flake8 . --count

      - name: mypy
        run: mypy pyrs scripts tests

      - name: Mantid pre-requisites - create a properties file that turns off network access
        run: |
          mkdir ~/.mantid
          echo "CheckMantidVersion.OnStartup=0" > ~/.mantid/Mantid.user.properties
          echo "UpdateInstrumentDefinitions.OnStartup=0" >> ~/.mantid/Mantid.user.properties
          echo "usagereports.enabled=0" >> ~/.mantid/Mantid.user.properties

      - name: Test mantid/workbench
        run: |
          python -c "import mantid"
          python -c "import qtpy"
          python -c "import mantidqt"

      - name: Print Conda Packages
        run: conda list

      - name: Run PyRS tests
        run: xvfb-run --server-args="-screen 0 640x480x24" -a pytest --cov=pyrs --cov-report=xml --cov-report=term tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Build python wheel # cannot be used without mantid
        run: |
          python setup.py bdist_wheel
          check-wheel-contents dist/pyrs-*.whl

      - name: Build conda package
        # Build in all cases, for testing purposes
        run: |
          cd conda.recipe
          conda build --output-folder . . -c mantid
          conda verify noarch/pyrs-*py*.tar.bz2

      - name: Publish to Anaconda
        shell: bash -l {0}
        # Publish only for version tags (tag name starts with "v")
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          # IS_RC: "true" for release-candidate tags, e.g. "v1.0.0-rc1"
          IS_RC: ${{ contains(github.ref, 'rc') }}
        run: |
          conda install -y anaconda-client
          CONDA_LABEL="main"
          if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
          echo "pushing ${{ github.ref }} with label ${CONDA_LABEL}"
          anaconda upload --label ${CONDA_LABEL} conda.recipe/noarch/pyrs-*.tar.bz2

  trigger-deploy:
    runs-on: ubuntu-22.04
    needs: [ci]
    # Deploys from branch next or from a version tag
    if: ${{ github.ref == 'refs/heads/next' || startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Determine Environment
        uses: neutrons/branch-mapper@main
        id: conda_env_name
        with:
          prefix: pyrs

      - name: Trigger deploy
        id: trigger
        uses: eic/trigger-gitlab-ci@v2
        with:
          url: https://code.ornl.gov
          token: ${{ secrets.GITLAB_TRIGGER_TOKEN }}
          project_id: 11849
          variables: |
            PLAY="update"
            CONDA_ENV="${{ steps.conda_env_name.outputs.name }}"

      - name: Annotate commit
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            GitLab pipeline for ${{ steps.conda_env_name.outputs.name }} has been submitted for this commit: ${{ steps.trigger.outputs.web_url }}
